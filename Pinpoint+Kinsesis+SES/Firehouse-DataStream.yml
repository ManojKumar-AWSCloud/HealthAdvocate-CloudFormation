AWSTemplateFormatVersion: 2010-09-09
Resources:
  S3BucketFirehouseDeliveryStream:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: firehouse-29-03-202309
      AccessControl: Private
      BucketEncryption: 
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      ObjectLockEnabled: false
      VersioningConfiguration:
        Status: Enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
  KinesisS3AccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: KinesisS3AccessRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: KinesisS3AccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource: "*"
  FirehoseDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: PUT-S3-hatest
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: !Sub "arn:aws:s3:::${S3BucketFirehouseDeliveryStream}"
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 5
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: "/aws/kinesisfirehose/PUT-S3-hatest"
          LogStreamName: "DestinationError"
        CompressionFormat: "UNCOMPRESSED"
        Prefix: ""
        RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/${KinesisS3AccessRole}"