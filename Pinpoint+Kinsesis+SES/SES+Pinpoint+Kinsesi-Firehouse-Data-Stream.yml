AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template for creating an identity in AWS SES
Parameters:
  EmailAddress:
    Type: String
    Description: Type your email Address here which you want to use in Pinoint.
Resources:
  MySESIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
       EmailIdentity: !Ref EmailAddress
  PinpointProject:
    Type: 'AWS::Pinpoint::App'
    Properties:
      Name: Testing-Project
  EmailChannel:
    Type: 'AWS::Pinpoint::EmailChannel'
    Properties:
      ApplicationId: !Ref PinpointProject
      Enabled: true
      FromAddress: !Ref MySESIdentity
      Identity: !Sub "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/${MySESIdentity}"
  S3BucketFirehouseDeliveryStream:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: firehouse-29-03-202309
      AccessControl: Private
      BucketEncryption: 
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      ObjectLockEnabled: false
      VersioningConfiguration:
        Status: Enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
  KinesisS3AccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: KinesisS3AccessRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: KinesisS3AccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                 - s3:*
                 - logs:*
                Resource: "*"
  FirehoseDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: PUT-S3-hatest
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: !Sub "arn:aws:s3:::${S3BucketFirehouseDeliveryStream}"
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 5
        CloudWatchLoggingOptions:
          Enabled: true
        RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/${KinesisS3AccessRole}"
  PinpointKinesisAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: pinpointKinesisAccessRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: pinpoint.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: KinesisS3AccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                 - Kinesis:*
                 - firehose:*
                Resource: "*"
  PinpointEventStream: 
   Type: AWS::Pinpoint::EventStream
   Properties:
     ApplicationId: !Ref PinpointProject
     DestinationStreamArn: !Sub "arn:aws:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/${FirehoseDeliveryStream}"
     RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/${PinpointKinesisAccessRole}"